services:
  db_pesquisa:
    
    image: mariadb:11
    
    restart: "always"
    
    command: 
      - --sql_mode=NO_ENGINE_SUBSTITUTION
      - --block-encryption-mode=aes-256-cbc
      - --plugin-load-add=file_key_management
      - --loose_file_key_management_filename=/etc/mysql/encryption/keyfile.enc
      - --loose_file_key_management_filekey=${MARIADB_REST_AES_KEY}
      - --file_key_management_encryption_algorithm=aes_cbc
      - --innodb_default_encryption_key_id=1
      - --innodb_encryption_threads=4
      - --innodb_encrypt_tables=FORCE
      - --innodb_encrypt_log=ON
      - --aria_encrypt_tables=ON
      - --encrypt-tmp-disk-tables=1
      - --encrypt-tmp-files=1
      - --encrypt_binlog=ON

    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: America/Fortaleza
  
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      start_period: 10s
      interval: 180s
      timeout: 30s
      retries: 3
    
    volumes:
      - pesquisa-data:/var/lib/mysql
      - ./share:/share
      - ./aes_key.key.enc:/etc/mysql/encryption/keyfile.enc
    networks:
      - web  
  pesquisa:
    image: ghcr.io/rafaelperazzo/python3:v1.4.0
    command: python3 pesquisa.py
    depends_on:
      db_pesquisa:
        condition: service_healthy
    
    volumes:
      - ./app:/app
      - ./share:/share
      - .git:/git
    labels:
       - "traefik.enable=true"
       - "traefik.http.routers.pesquisa.rule=PathPrefix(`/pesquisa`)&&Host(`sci06-ter-jne.ufca.edu.br`)"
       - "traefik.http.routers.pesquisa.tls=true"
       - "traefik.http.routers.pesquisa.tls.certresolver=certificado"
       - "traefik.http.routers.pesquisa.entrypoints=websecure"
    environment:
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      GMAIL_PASSWORD: ${GMAIL_PASSWORD}
      SESSION_SECRET_KEY: ${SESSION_SECRET_KEY}
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_TEST_DATABASE: ${MYSQL_TEST_DATABASE}
      SERVER_URL: ${SERVER_URL}
      PRODUCAO: ${PRODUCAO}
      URL_PREFIX: ${URL_PREFIX}
      TEST_USER: ${TEST_USER}
      TEST_PASSWORD: ${TEST_PASSWORD}
      EMAIL_TESTES: ${EMAIL_TESTES}
      CPF_TESTES: ${CPF_TESTES}
      AES_KEY: ${AES_KEY}
      GPG_KEY: ${GPG_KEY}
      DEFAULT_EMAIL: ${DEFAULT_EMAIL}
      DSN_SENTRY: ${DSN_SENTRY}
      BS_SOURCE_TOKEN: ${BS_SOURCE_TOKEN}
      BS_HOST: ${BS_HOST}
      OPENVPN_KEY: ${OPENVPN_KEY}
      AWS_S3_KEY_ID: ${AWS_S3_KEY_ID}
      AWS_S3_SECRET_KEY: ${AWS_S3_SECRET_KEY}
      AWS_REGION: ${AWS_REGION}
      AWS_S3_BUCKET: ${AWS_S3_BUCKET}
      REDIS_HOST: ${REDIS_HOST}
      SERVER_PORT: ${SERVER_PORT}

    healthcheck:
      test: ["CMD", "curl", "-f", "http://ip.me"]
      start_period: 15s
      interval: 180s
      timeout: 20s
      retries: 5

    restart: "always"
    ports:
      - "9008:${SERVER_PORT}"
    networks:
      - web
  
  autoheal:
    environment:
      AUTOHEAL_CONTAINER_LABEL: all
      AUTOHEAL_INTERVAL: 180
      AUTOHEAL_START_PERIOD: 5
    image: willfarrell/autoheal:latest
    tty: true
    network_mode: none
    restart: "always"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
  
  redis:
    image: redis:8
    restart: "always"
    networks:
      - web

networks:
  web:
    external: true

volumes:
  pesquisa-data: